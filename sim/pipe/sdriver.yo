                            | #######################################################################
                            | # Test for copying block of size 4;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f4a002000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f20400000000000000 | 	irmovq $4, %rdx		# src and dst have 4 elements
0x014: 30f6f801000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7c801000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: 6300                 | 	xorq %rax,%rax	 # count = 0
0x034: c0f2fcffffffffffffff | 	iaddq $-4,%rdx
0x03e: 721201000000000000   | 	jl Test2
0x047:                      | Loop1:
0x047: 50a70000000000000000 |     mrmovq (%rdi),%r10
0x051: 50970800000000000000 |     mrmovq 8(%rdi),%r9
0x05b: 40a60000000000000000 |     rmmovq %r10,(%rsi)
0x065: 62aa                 |     andq %r10,%r10
0x067: 717a00000000000000   |     jle Npos1
0x070: c0f00100000000000000 |     iaddq $1,%rax
0x07a:                      | Npos1:
                            |     
0x07a: 40960800000000000000 |     rmmovq %r9,8(%rsi)
0x084: 6299                 |     andq %r9,%r9
0x086: 719900000000000000   |     jle Npos2
0x08f: c0f00100000000000000 |     iaddq $1,%rax
0x099:                      | Npos2:
                            |     
0x099: 50a71000000000000000 |     mrmovq 16(%rdi),%r10
0x0a3: 50971800000000000000 |     mrmovq 24(%rdi),%r9
0x0ad: 62aa                 |     andq %r10,%r10
0x0af: 40a61000000000000000 |     rmmovq %r10,16(%rsi)
0x0b9: 71cc00000000000000   |     jle Npos3
0x0c2: c0f00100000000000000 |     iaddq $1,%rax
0x0cc:                      | Npos3:
                            | 
0x0cc: 40961800000000000000 |     rmmovq %r9,24(%rsi)
0x0d6: 6299                 |     andq %r9,%r9
0x0d8: 71eb00000000000000   |     jle Npos4
0x0e1: c0f00100000000000000 |     iaddq $1,%rax
0x0eb:                      | Npos4:
                            | 
0x0eb: c0f72000000000000000 |     iaddq $32, %rdi
0x0f5: c0f62000000000000000 |     iaddq $32, %rsi
0x0ff: c0f2fcffffffffffffff |     iaddq $-4, %rdx
0x109: 754700000000000000   |     jge Loop1
                            | 
0x112:                      | Test2:
0x112: c0f20400000000000000 |     iaddq $4,%rdx
0x11c: 73c601000000000000   |     je Done
                            |     
0x125: 50a70000000000000000 |     mrmovq (%rdi), %r10	
0x12f: 50970800000000000000 |     mrmovq 8(%rdi), %r9
0x139: 50871000000000000000 |     mrmovq 16(%rdi), %r8
0x143: 62aa                 | 	andq %r10, %r10	
0x145: 715801000000000000   | 	jle Npos5	
0x14e: c0f00100000000000000 | 	iaddq $1, %rax
0x158:                      | Npos5:
0x158: 40a60000000000000000 |     rmmovq %r10, (%rsi)
0x162: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x16c: 73c601000000000000   | 	je Done
                            | 
0x175: 6299                 | 	andq %r9, %r9
0x177: 718a01000000000000   |     jle Npos6
0x180: c0f00100000000000000 |     iaddq $1, %rax
0x18a:                      | Npos6:
0x18a: 40960800000000000000 |     rmmovq %r9, 8(%rsi)
0x194: c0f2ffffffffffffffff |     iaddq $-1, %rdx
0x19e: 73c601000000000000   |     je Done
                            |     
0x1a7: 6288                 |     andq %r8, %r8
0x1a9: 71bc01000000000000   |     jle Npos7
0x1b2: c0f00100000000000000 |     iaddq $1, %rax
0x1bc:                      | Npos7:
0x1bc: 40861000000000000000 |     rmmovq %r8, 16(%rsi)
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x1c6:                      | Done:
0x1c6: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x1c7:                      | End:
                            | #/* $end ncopy-ys */
0x1c7:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x1c8:                      | 	.align 8
0x1c8:                      | src:
0x1c8: 0100000000000000     | 	.quad 1
0x1d0: feffffffffffffff     | 	.quad -2
0x1d8: fdffffffffffffff     | 	.quad -3
0x1e0: 0400000000000000     | 	.quad 4
0x1e8: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x1f0:                      | 	.align 16
0x1f0:                      | Predest:
0x1f0: fadebc0000000000     | 	.quad 0xbcdefa
0x1f8:                      | dest:
0x1f8: abefcd0000000000     | 	.quad 0xcdefab
0x200: abefcd0000000000     | 	.quad 0xcdefab
0x208: abefcd0000000000     | 	.quad 0xcdefab
0x210: abefcd0000000000     | 	.quad 0xcdefab
0x218:                      | Postdest:
0x218: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x220:                      | .align 8
                            | # Run time stack
0x220: 0000000000000000     | 	.quad 0
0x228: 0000000000000000     | 	.quad 0
0x230: 0000000000000000     | 	.quad 0
0x238: 0000000000000000     | 	.quad 0
0x240: 0000000000000000     | 	.quad 0
0x248: 0000000000000000     | 	.quad 0
0x250: 0000000000000000     | 	.quad 0
0x258: 0000000000000000     | 	.quad 0
0x260: 0000000000000000     | 	.quad 0
0x268: 0000000000000000     | 	.quad 0
0x270: 0000000000000000     | 	.quad 0
0x278: 0000000000000000     | 	.quad 0
0x280: 0000000000000000     | 	.quad 0
0x288: 0000000000000000     | 	.quad 0
0x290: 0000000000000000     | 	.quad 0
0x298: 0000000000000000     | 	.quad 0
                            | 
0x2a0:                      | Stack:
