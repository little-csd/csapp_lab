#######################################################################
# Test for copying block of size 4;
#######################################################################
	.pos 0
main:	irmovq Stack, %rsp  	# Set up stack pointer

	# Set up arguments for copy function and then invoke it
	irmovq $4, %rdx		# src and dst have 4 elements
	irmovq dest, %rsi	# dst array
	irmovq src, %rdi	# src array
	call ncopy		 
	halt			# should halt with num nonzeros in %rax
StartFun:
#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	xorq %rax,%rax	 # count = 0
	iaddq $-4,%rdx
	jl Test2
Loop1:
    mrmovq (%rdi),%r10
    mrmovq 8(%rdi),%r9
    rmmovq %r10,(%rsi)
    andq %r10,%r10
    jle Npos1
    iaddq $1,%rax
Npos1:
    
    rmmovq %r9,8(%rsi)
    andq %r9,%r9
    jle Npos2
    iaddq $1,%rax
Npos2:
    
    mrmovq 16(%rdi),%r10
    mrmovq 24(%rdi),%r9
    andq %r10,%r10
    rmmovq %r10,16(%rsi)
    jle Npos3
    iaddq $1,%rax
Npos3:

    rmmovq %r9,24(%rsi)
    andq %r9,%r9
    jle Npos4
    iaddq $1,%rax
Npos4:

    iaddq $32, %rdi
    iaddq $32, %rsi
    iaddq $-4, %rdx
    jge Loop1

Test2:
    iaddq $4,%rdx
    je Done
    
    mrmovq (%rdi), %r10	
    mrmovq 8(%rdi), %r9
    mrmovq 16(%rdi), %r8
	andq %r10, %r10	
	jle Npos5	
	iaddq $1, %rax
Npos5:
    rmmovq %r10, (%rsi)
	iaddq $-1, %rdx
	je Done

	andq %r9, %r9
    jle Npos6
    iaddq $1, %rax
Npos6:
    rmmovq %r9, 8(%rsi)
    iaddq $-1, %rdx
    je Done
    
    andq %r8, %r8
    jle Npos7
    iaddq $1, %rax
Npos7:
    rmmovq %r8, 16(%rsi)
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
EndFun:

###############################
# Source and destination blocks 
###############################
	.align 8
src:
	.quad 1
	.quad -2
	.quad -3
	.quad 4
	.quad 0xbcdefa # This shouldn't get moved

	.align 16
Predest:
	.quad 0xbcdefa
dest:
	.quad 0xcdefab
	.quad 0xcdefab
	.quad 0xcdefab
	.quad 0xcdefab
Postdest:
	.quad 0xdefabc

.align 8
# Run time stack
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0
	.quad 0

Stack:
